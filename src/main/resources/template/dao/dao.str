package ${system.package}.dao;

import ${system.package}.domain.${entity.className};
import org.apache.ibatis.annotations.*;

import java.util.List;

/**
 * @author ${system.author}
 * @since ${system.date}
 */
public interface ${entity.className}Dao {

    /**
     * 通过主键id查询
     *
     * @param id 主键id
     * @return 查询到的结果, 无结果将返回null
     */
    @Results(id = "baseResult", value = {
            ${repeat start}
            @Result(property = "${entity.field.fieldName}", column = "${entity.field.columnName}"),
            ${repeat end}
    })
    @Select("SELECT * FROM ${entity.tableName} WHERE id = #{id}")
    ${entity.className} queryById(long id);

    /**
     * 添加记录
     *
     * @param ${entity.entityName} 数据库实体
     * @return 返回受影响的记录条数
     */
    @Insert({"<script>",
            "INSERT INTO ${entity.tableName}",
            "<trim prefix='(' suffix=')' suffixOverrides=','>",
            "${repeat start}",
            "<if test='${entity.field.fieldName} != null'>${entity.field.columnName}</if>",
            "${repeat end}",
            "</trim>",
            "<trim prefix='VALUES (' suffix=')' suffixOverrides=','>",
            "${repeat start}",
            "<if test='${entity.field.fieldName} != null'>#{${entity.field.fieldName}}</if>",
            "${repeat end}",
            "</trim>",
            "</script>"})
    @Options(useGeneratedKeys = true)
    int add(${entity.className} ${entity.entityName});

    /**
     * 通过主键id删除
     *
     * @param id 主键id
     * @return 返回受影响的记录条数
     */
    @Delete("DELETE FROM ${entity.tableName} WHERE id = #{id}")
    int deleteById(long id);

    /**
     * 通过主键id更新
     *
     * @param ${entity.entityName} 数据库实体
     * @return 返回受影响的记录条数
     */
    @Update({"<script>",
            "UPDATE ${entity.tableName}",
            "<set>",
            "${repeat start}",
            "<if test='${entity.field.fieldName} != null'>${entity.field.columnName} = #{${entity.field.fieldName}},</if>",
            "${repeat end}",
            "</set>",
            "WHERE id = #{id}",
            "</script>"})
    int updateById(${entity.className} ${entity.entityName});

    /**
     * 查询一条记录, 自行控制条件保证返回一条记录
     *
     * @param ${entity.entityName} 实体的非空属性会做为查询条件
     * @return 查询到的结果, 无结果将返回null
     */
    @ResultMap("baseResult")
    @Select({"<script>",
            "SELECT * FROM ${entity.tableName}",
            "<where>",
            "${repeat start}",
            "<if test='${entity.field.fieldName} != null'>AND ${entity.field.columnName} = #{${entity.field.fieldName}}</if>",
            "${repeat end}",
            "</where>",
            "</script>"})
    ${entity.className} queryOne(${entity.className} ${entity.entityName});

    /**
     * 查询多条记录, 自行控制条件保证返回多条记录
     *
     * @param ${entity.entityName} 实体的非空属性会作为查询条件
     * @return 查询到的结果, 无结果将返回空List
     */
    @ResultMap("baseResult")
    @Select({"<script>",
            "SELECT * FROM ${entity.tableName}",
            "<where>",
            "${repeat start}",
            "<if test='${entity.field.fieldName} != null'>AND ${entity.field.columnName} = #{${entity.field.fieldName}}</if>",
            "${repeat end}",
            "</where>",
            "</script>"})
    List<${entity.className}> queryList(${entity.className} ${entity.entityName});
}
